process Refit = 
{    
    ### initialize  MessageLogger
    include "FWCore/MessageService/data/MessageLogger.cfi"
    #replace MessageLogger.cout.placeholder = false

#    service = MessageLogger
#    {
#	untracked vstring destinations = {"cout"}
##	untracked vstring categories    = { "TrackFitters","TrackProducer" }
#	untracked vstring categories    = {	"TrackingRegressionTest"}
#	untracked PSet cout =
#	{
#	    untracked string threshold = "DEBUG"
#	    untracked PSet default   = { untracked int32 limit = 0  }
##	    untracked PSet TrackFitters   = { untracked int32 limit = 0  }
##	    untracked PSet TrackProducer   = { untracked int32 limit = -1  }	    
#	    untracked PSet TrackingRegressionTest = { untracked int32 limit = 10000000}
#	}
#	untracked vstring debugModules = {"TrackRefitter"
#					  # "Refitter2",
#				 	  #"ctfWithMaterialTracks"
#		} 
#    }
 
    ### standardSequences ###
    include "Configuration/ReleaseValidation/data/Services.cff"
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    include "Configuration/StandardSequences/data/FakeConditions.cff"	

   
    untracked PSet maxEvents = {untracked int32 input = 100}
    source = PoolSource 
    { 
	untracked vstring fileNames = {"file:file.root"}	
    }

    #include "RelVal.cff"

    #service = Tracer { untracked string indention = "$$"}
    service = Timing{}

    # track refit with material
    include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"
    include "RecoTracker/TrackProducer/data/RefitterWithMaterial.cff"
    replace TrackRefitter.useHitsSplitting = true
    #replace TrackRefitter.src = "test"
  
    module Refitter2 = TrackRefitter from "RecoTracker/TrackProducer/data/RefitterWithMaterial.cfi"
    replace Refitter2.src = "TrackRefitter"
	
    #replace TrackRefitter.constraint = "momentum"
    #module test = MomentumConstraintProducer{InputTag src = ctfWithMaterialTracks}

    #replace TrackRefitter.constraint = "vertex"
    #module test = VertexConstraintProducer{InputTag src = ctfWithMaterialTracks}
    
    module out = PoolOutputModule 
    {
	untracked string fileName = "RefittedTracks.root"
    }
    
    path p = 
    {
        #globalMixedSeeds,ckfTrackCandidates,ctfWithMaterialTracks
	TrackRefitter,
        Refitter2
    }
    
    #endpath e = 
    #{
#	out
#    }
}
